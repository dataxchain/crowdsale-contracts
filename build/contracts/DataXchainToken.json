{
  "contractName": "DataXchainToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "initialBalance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": "0x6003805460a060020a60ff021916905560c0604052600a60808190527f4461746158636861696e0000000000000000000000000000000000000000000060a090815261004e91600491906100fb565b506040805180820190915260048082527f44584354000000000000000000000000000000000000000000000000000000006020909201918252610093916005916100fb565b506006805460ff191660121790553480156100ad57600080fd5b50604051602080610f34833981016040908152905160038054600160a060020a0319163390811790915560065460ff16600a0a90910260018190556000918252602082905291902055610196565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013c57805160ff1916838001178555610169565b82800160010185558215610169579182015b8281111561016957825182559160200191906001019061014e565b50610175929150610179565b5090565b61019391905b80821115610175576000815560010161017f565b90565b610d8f806101a56000396000f3006080604052600436106100fb5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610100578063095ea7b31461018a57806318160ddd146101c257806323b872dd146101e9578063313ce567146102135780633f4ba83a1461023e57806342966c68146102555780635c975abb1461026d578063661884631461028257806370a08231146102a6578063715018a6146102c75780638456cb59146102dc5780638da5cb5b146102f157806395d89b4114610322578063a9059cbb14610337578063d73dd6231461035b578063dd62ed3e1461037f578063f2fde38b146103a6575b600080fd5b34801561010c57600080fd5b506101156103c7565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014f578181015183820152602001610137565b50505050905090810190601f16801561017c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561019657600080fd5b506101ae600160a060020a0360043516602435610455565b604080519115158252519081900360200190f35b3480156101ce57600080fd5b506101d7610480565b60408051918252519081900360200190f35b3480156101f557600080fd5b506101ae600160a060020a0360043581169060243516604435610486565b34801561021f57600080fd5b506102286104b3565b6040805160ff9092168252519081900360200190f35b34801561024a57600080fd5b506102536104bc565b005b34801561026157600080fd5b50610253600435610534565b34801561027957600080fd5b506101ae610541565b34801561028e57600080fd5b506101ae600160a060020a0360043516602435610551565b3480156102b257600080fd5b506101d7600160a060020a0360043516610575565b3480156102d357600080fd5b50610253610590565b3480156102e857600080fd5b506102536105fe565b3480156102fd57600080fd5b5061030661067b565b60408051600160a060020a039092168252519081900360200190f35b34801561032e57600080fd5b5061011561068a565b34801561034357600080fd5b506101ae600160a060020a03600435166024356106e5565b34801561036757600080fd5b506101ae600160a060020a0360043516602435610709565b34801561038b57600080fd5b506101d7600160a060020a036004358116906024351661072d565b3480156103b257600080fd5b50610253600160a060020a0360043516610758565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561044d5780601f106104225761010080835404028352916020019161044d565b820191906000526020600020905b81548152906001019060200180831161043057829003601f168201915b505050505081565b60035460009060a060020a900460ff161561046f57600080fd5b6104798383610778565b9392505050565b60015490565b60035460009060a060020a900460ff16156104a057600080fd5b6104ab8484846107de565b949350505050565b60065460ff1681565b600354600160a060020a031633146104d357600080fd5b60035460a060020a900460ff1615156104eb57600080fd5b6003805474ff0000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b61053e3382610955565b50565b60035460a060020a900460ff1681565b60035460009060a060020a900460ff161561056b57600080fd5b6104798383610a56565b600160a060020a031660009081526020819052604090205490565b600354600160a060020a031633146105a757600080fd5b600354604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a26003805473ffffffffffffffffffffffffffffffffffffffff19169055565b600354600160a060020a0316331461061557600080fd5b60035460a060020a900460ff161561062c57600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600354600160a060020a031681565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561044d5780601f106104225761010080835404028352916020019161044d565b60035460009060a060020a900460ff16156106ff57600080fd5b6104798383610b46565b60035460009060a060020a900460ff161561072357600080fd5b6104798383610c27565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a0316331461076f57600080fd5b61053e81610cc0565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6000600160a060020a03831615156107f557600080fd5b600160a060020a03841660009081526020819052604090205482111561081a57600080fd5b600160a060020a038416600090815260026020908152604080832033845290915290205482111561084a57600080fd5b600160a060020a038416600090815260208190526040902054610873908363ffffffff610d3e16565b600160a060020a0380861660009081526020819052604080822093909355908516815220546108a8908363ffffffff610d5016565b600160a060020a038085166000908152602081815260408083209490945591871681526002825282812033825290915220546108ea908363ffffffff610d3e16565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b600160a060020a03821660009081526020819052604090205481111561097a57600080fd5b600160a060020a0382166000908152602081905260409020546109a3908263ffffffff610d3e16565b600160a060020a0383166000908152602081905260409020556001546109cf908263ffffffff610d3e16565b600155604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b336000908152600260209081526040808320600160a060020a038616845290915281205480831115610aab57336000908152600260209081526040808320600160a060020a0388168452909152812055610ae0565b610abb818463ffffffff610d3e16565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a0383161515610b5d57600080fd5b33600090815260208190526040902054821115610b7957600080fd5b33600090815260208190526040902054610b99908363ffffffff610d3e16565b3360009081526020819052604080822092909255600160a060020a03851681522054610bcb908363ffffffff610d5016565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610c5b908363ffffffff610d5016565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a0381161515610cd557600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610d4a57fe5b50900390565b81810182811015610d5d57fe5b929150505600a165627a7a723058200dc3adc440fb2f16c50f3aa7e9275e483257eb5a3bcd9b37bc7efffd9bf58c3f0029",
  "deployedBytecode": "0x6080604052600436106100fb5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610100578063095ea7b31461018a57806318160ddd146101c257806323b872dd146101e9578063313ce567146102135780633f4ba83a1461023e57806342966c68146102555780635c975abb1461026d578063661884631461028257806370a08231146102a6578063715018a6146102c75780638456cb59146102dc5780638da5cb5b146102f157806395d89b4114610322578063a9059cbb14610337578063d73dd6231461035b578063dd62ed3e1461037f578063f2fde38b146103a6575b600080fd5b34801561010c57600080fd5b506101156103c7565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014f578181015183820152602001610137565b50505050905090810190601f16801561017c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561019657600080fd5b506101ae600160a060020a0360043516602435610455565b604080519115158252519081900360200190f35b3480156101ce57600080fd5b506101d7610480565b60408051918252519081900360200190f35b3480156101f557600080fd5b506101ae600160a060020a0360043581169060243516604435610486565b34801561021f57600080fd5b506102286104b3565b6040805160ff9092168252519081900360200190f35b34801561024a57600080fd5b506102536104bc565b005b34801561026157600080fd5b50610253600435610534565b34801561027957600080fd5b506101ae610541565b34801561028e57600080fd5b506101ae600160a060020a0360043516602435610551565b3480156102b257600080fd5b506101d7600160a060020a0360043516610575565b3480156102d357600080fd5b50610253610590565b3480156102e857600080fd5b506102536105fe565b3480156102fd57600080fd5b5061030661067b565b60408051600160a060020a039092168252519081900360200190f35b34801561032e57600080fd5b5061011561068a565b34801561034357600080fd5b506101ae600160a060020a03600435166024356106e5565b34801561036757600080fd5b506101ae600160a060020a0360043516602435610709565b34801561038b57600080fd5b506101d7600160a060020a036004358116906024351661072d565b3480156103b257600080fd5b50610253600160a060020a0360043516610758565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561044d5780601f106104225761010080835404028352916020019161044d565b820191906000526020600020905b81548152906001019060200180831161043057829003601f168201915b505050505081565b60035460009060a060020a900460ff161561046f57600080fd5b6104798383610778565b9392505050565b60015490565b60035460009060a060020a900460ff16156104a057600080fd5b6104ab8484846107de565b949350505050565b60065460ff1681565b600354600160a060020a031633146104d357600080fd5b60035460a060020a900460ff1615156104eb57600080fd5b6003805474ff0000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b61053e3382610955565b50565b60035460a060020a900460ff1681565b60035460009060a060020a900460ff161561056b57600080fd5b6104798383610a56565b600160a060020a031660009081526020819052604090205490565b600354600160a060020a031633146105a757600080fd5b600354604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a26003805473ffffffffffffffffffffffffffffffffffffffff19169055565b600354600160a060020a0316331461061557600080fd5b60035460a060020a900460ff161561062c57600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600354600160a060020a031681565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561044d5780601f106104225761010080835404028352916020019161044d565b60035460009060a060020a900460ff16156106ff57600080fd5b6104798383610b46565b60035460009060a060020a900460ff161561072357600080fd5b6104798383610c27565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a0316331461076f57600080fd5b61053e81610cc0565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6000600160a060020a03831615156107f557600080fd5b600160a060020a03841660009081526020819052604090205482111561081a57600080fd5b600160a060020a038416600090815260026020908152604080832033845290915290205482111561084a57600080fd5b600160a060020a038416600090815260208190526040902054610873908363ffffffff610d3e16565b600160a060020a0380861660009081526020819052604080822093909355908516815220546108a8908363ffffffff610d5016565b600160a060020a038085166000908152602081815260408083209490945591871681526002825282812033825290915220546108ea908363ffffffff610d3e16565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b600160a060020a03821660009081526020819052604090205481111561097a57600080fd5b600160a060020a0382166000908152602081905260409020546109a3908263ffffffff610d3e16565b600160a060020a0383166000908152602081905260409020556001546109cf908263ffffffff610d3e16565b600155604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b336000908152600260209081526040808320600160a060020a038616845290915281205480831115610aab57336000908152600260209081526040808320600160a060020a0388168452909152812055610ae0565b610abb818463ffffffff610d3e16565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a0383161515610b5d57600080fd5b33600090815260208190526040902054821115610b7957600080fd5b33600090815260208190526040902054610b99908363ffffffff610d3e16565b3360009081526020819052604080822092909255600160a060020a03851681522054610bcb908363ffffffff610d5016565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610c5b908363ffffffff610d5016565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a0381161515610cd557600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610d4a57fe5b50900390565b81810182811015610d5d57fe5b929150505600a165627a7a723058200dc3adc440fb2f16c50f3aa7e9275e483257eb5a3bcd9b37bc7efffd9bf58c3f0029",
  "sourceMap": "247:26:4:-;;;-1:-1:-1;;;;;;247:26:4;;;320:33:0;243:410;320:33;;243:410;320:33;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;359:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;394:26:0;;;-1:-1:-1;;394:26:0;418:2;394:26;;;428:223;5:2:-1;;;;30:1;27;20:12;5:2;428:223:0;;;;;;;;;;;;;;;;567:5:6;:18;;-1:-1:-1;;;;;;567:18:6;575:10;567:18;;;;;;579:8:0;;;;565:2;:23;547:42;;;567:18:6;532:57:0;;;567:5:6;603:20:0;;;428:223;603:20;;;;;;:35;243:410;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;243:410:0;;;-1:-1:-1;243:410:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "243:410:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;320:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;320:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;320:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;592:162:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;592:162:11;-1:-1:-1;;;;;592:162:11;;;;;;;;;;;;;;;;;;;;;;;;;371:83:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;371:83:7;;;;;;;;;;;;;;;;;;;;400:188:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;400:188:11;-1:-1:-1;;;;;400:188:11;;;;;;;;;;;;394:26:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;394:26:0;;;;;;;;;;;;;;;;;;;;;;;838:92:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:92:4;;;;;;353:73:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;353:73:8;;;;;247:26:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:26:4;;;;957:205:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;957:205:11;-1:-1:-1;;;;;957:205:11;;;;;;;1131:99:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1131:99:7;-1:-1:-1;;;;;1131:99:7;;;;;827:111:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:111:6;;;;666:90:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:90:4;;;;238:20:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:6;;;;;;;;-1:-1:-1;;;;;238:20:6;;;;;;;;;;;;;;359:29:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;359:29:0;;;;242:154:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;242:154:11;-1:-1:-1;;;;;242:154:11;;;;;;;758:195;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;758:195:11;-1:-1:-1;;;;;758:195:11;;;;;;;2336:153:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2336:153:13;-1:-1:-1;;;;;2336:153:13;;;;;;;;;;1100:103:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1100:103:6;-1:-1:-1;;;;;1100:103:6;;;;;320:33:0;;;;;;;;;;;;;;;-1:-1:-1;;320:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;592:162:11:-;416:6:4;;697:4:11;;-1:-1:-1;;;416:6:4;;;;415:7;407:16;;;;;;718:31:11;732:8;742:6;718:13;:31::i;:::-;711:38;592:162;-1:-1:-1;;;592:162:11:o;371:83:7:-;437:12;;371:83;:::o;400:188:11:-;416:6:4;;524:4:11;;-1:-1:-1;;;416:6:4;;;;415:7;407:16;;;;;;545:38:11;564:5;571:3;576:6;545:18;:38::i;:::-;538:45;400:188;-1:-1:-1;;;;400:188:11:o;394:26:0:-;;;;;;:::o;838:92:4:-;719:5:6;;-1:-1:-1;;;;;719:5:6;705:10;:19;697:28;;;;;;568:6:4;;-1:-1:-1;;;568:6:4;;;;560:15;;;;;;;;891:6;:14;;-1:-1:-1;;891:14:4;;;916:9;;;;900:5;;916:9;838:92::o;353:73:8:-;396:25;402:10;414:6;396:5;:25::i;:::-;353:73;:::o;247:26:4:-;;;-1:-1:-1;;;247:26:4;;;;;:::o;957:205:11:-;416:6:4;;1078:12:11;;-1:-1:-1;;;416:6:4;;;;415:7;407:16;;;;;;1107:50:11;1130:8;1140:16;1107:22;:50::i;1131:99:7:-;-1:-1:-1;;;;;1209:16:7;1187:7;1209:16;;;;;;;;;;;;1131:99::o;827:111:6:-;719:5;;-1:-1:-1;;;;;719:5:6;705:10;:19;697:28;;;;;;903:5;;884:25;;-1:-1:-1;;;;;903:5:6;;;;884:25;;903:5;;884:25;915:5;:18;;-1:-1:-1;;915:18:6;;;827:111::o;666:90:4:-;719:5:6;;-1:-1:-1;;;;;719:5:6;705:10;:19;697:28;;;;;;416:6:4;;-1:-1:-1;;;416:6:4;;;;415:7;407:16;;;;;;720:6;:13;;-1:-1:-1;;720:13:4;-1:-1:-1;;;720:13:4;;;744:7;;;;720:13;;744:7;666:90::o;238:20:6:-;;;-1:-1:-1;;;;;238:20:6;;:::o;359:29:0:-;;;;;;;;;;;;;;;-1:-1:-1;;359:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;242:154:11;416:6:4;;343:4:11;;-1:-1:-1;;;416:6:4;;;;415:7;407:16;;;;;;364:27:11;379:3;384:6;364:14;:27::i;758:195::-;416:6:4;;874:12:11;;-1:-1:-1;;;416:6:4;;;;415:7;407:16;;;;;;903:45:11;926:8;936:11;903:22;:45::i;2336:153:13:-;-1:-1:-1;;;;;2459:15:13;;;2435:7;2459:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2336:153::o;1100:103:6:-;719:5;;-1:-1:-1;;;;;719:5:6;705:10;:19;697:28;;;;;;1169:29;1188:9;1169:18;:29::i;1829:188:13:-;1916:10;1896:4;1908:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1908:29:13;;;;;;;;;;;:38;;;1957;;;;;;;1896:4;;1908:29;;1916:10;;1957:38;;;;;;;;-1:-1:-1;2008:4:13;1829:188;;;;:::o;736:470::-;842:4;-1:-1:-1;;;;;864:17:13;;;;856:26;;;;;;-1:-1:-1;;;;;906:15:13;;:8;:15;;;;;;;;;;;896:25;;;888:34;;;;;;-1:-1:-1;;;;;946:14:13;;;;;;:7;:14;;;;;;;;961:10;946:26;;;;;;;;936:36;;;928:45;;;;;;-1:-1:-1;;;;;998:15:13;;:8;:15;;;;;;;;;;;:27;;1018:6;998:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;980:15:13;;;:8;:15;;;;;;;;;;;:45;;;;1047:13;;;;;;;:25;;1065:6;1047:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1031:13:13;;;:8;:13;;;;;;;;;;;:41;;;;1107:14;;;;;:7;:14;;;;;1122:10;1107:26;;;;;;;:38;;1138:6;1107:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1078:14:13;;;;;;;:7;:14;;;;;;;;1093:10;1078:26;;;;;;;;:67;;;;1156:28;;;;;;;;;;;1078:14;;1156:28;;;;;;;;;;;-1:-1:-1;1197:4:13;736:470;;;;;:::o;430:438:8:-;-1:-1:-1;;;;;508:14:8;;:8;:14;;;;;;;;;;;498:24;;;490:33;;;;;;-1:-1:-1;;;;;718:14:8;;:8;:14;;;;;;;;;;;:26;;737:6;718:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;701:14:8;;:8;:14;;;;;;;;;;:43;765:12;;:24;;782:6;765:24;:16;:24;:::i;:::-;750:12;:39;800:18;;;;;;;;-1:-1:-1;;;;;800:18:8;;;;;;;;;;;;;829:34;;;;;;;;852:1;;-1:-1:-1;;;;;829:34:8;;;;;;;;;;;;430:438;;:::o;3701:425:13:-;3842:10;3804:4;3834:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3834:29:13;;;;;;;;;;3873:27;;;3869:164;;;3918:10;3942:1;3910:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3910:29:13;;;;;;;;;:33;3869:164;;;3996:30;:8;4009:16;3996:30;:12;:30;:::i;:::-;3972:10;3964:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3964:29:13;;;;;;;;;:62;3869:164;4052:10;4074:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4043:61:13;;4074:29;;;;;;;;;;;4043:61;;;;;;;;;4052:10;4043:61;;;;;;;;;;;-1:-1:-1;4117:4:13;;3701:425;-1:-1:-1;;;3701:425:13:o;608:321:7:-;671:4;-1:-1:-1;;;;;691:17:7;;;;683:26;;;;;;742:10;733:8;:20;;;;;;;;;;;723:30;;;715:39;;;;;;793:10;784:8;:20;;;;;;;;;;;:32;;809:6;784:32;:24;:32;:::i;:::-;770:10;761:8;:20;;;;;;;;;;;:55;;;;-1:-1:-1;;;;;838:13:7;;;;;;:25;;856:6;838:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;822:13:7;;:8;:13;;;;;;;;;;;;:41;;;;874:33;;;;;;;822:13;;883:10;;874:33;;;;;;;;;;-1:-1:-1;920:4:7;608:321;;;;:::o;2946:293:13:-;3106:10;3044:4;3098:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3098:29:13;;;;;;;;;;:46;;3132:11;3098:46;:33;:46;:::i;:::-;3066:10;3058:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3058:29:13;;;;;;;;;;;;:87;;;3156:61;;;;;;3058:29;;3156:61;;;;;;;;;;;-1:-1:-1;3230:4:13;2946:293;;;;:::o;1338:171:6:-;-1:-1:-1;;;;;1408:23:6;;;;1400:32;;;;;;1464:5;;1443:38;;-1:-1:-1;;;;;1443:38:6;;;;1464:5;;1443:38;;1464:5;;1443:38;1487:5;:17;;-1:-1:-1;;1487:17:6;-1:-1:-1;;;;;1487:17:6;;;;;;;;;;1338:171::o;1042:110:5:-;1100:7;1122:6;;;;1115:14;;;;-1:-1:-1;1142:5:5;;;1042:110::o;1214:123::-;1293:5;;;1311:6;;;;1304:14;;;;1214:123;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol\";\n\ncontract DataXchainToken is StandardToken, PausableToken, BurnableToken{\n    string public name = \"DataXchain\";\n    string public symbol = \"DXCT\";\n    uint8 public decimals = 18;\n\n\n    constructor\n        (\n            uint256 initialBalance\n        )\n        public\n        {\n            totalSupply_ = initialBalance * (10 ** uint256(decimals));\n            balances[msg.sender] = totalSupply_;\n\n\n        }\n}\n",
  "sourcePath": "/usr/src/app/contracts/DataXchainToken.sol",
  "ast": {
    "absolutePath": "/usr/src/app/contracts/DataXchainToken.sol",
    "exportedSymbols": {
      "DataXchainToken": [
        44
      ]
    },
    "id": 45,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 1291,
        "src": "26:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 982,
        "src": "98:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 805,
        "src": "170:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1290,
              "src": "271:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$1290",
                "typeString": "contract StandardToken"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "271:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "PausableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 981,
              "src": "286:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PausableToken_$981",
                "typeString": "contract PausableToken"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "286:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "BurnableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 804,
              "src": "301:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BurnableToken_$804",
                "typeString": "contract BurnableToken"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "301:13:0"
          }
        ],
        "contractDependencies": [
          457,
          637,
          733,
          804,
          847,
          879,
          981,
          1290
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 44,
        "linearizedBaseContracts": [
          44,
          804,
          981,
          457,
          637,
          1290,
          733,
          847,
          879
        ],
        "name": "DataXchainToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 13,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 44,
            "src": "320:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 11,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "320:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4461746158636861696e",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "341:12:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1c35e2a1d1922d3ca21a0195b7c6fdcb9094961f8364a02feca9ccef09653ad8",
                "typeString": "literal_string \"DataXchain\""
              },
              "value": "DataXchain"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 44,
            "src": "359:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 14,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "359:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "44584354",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "382:6:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_820220df068181782cf04f9a2deae67d7e31ba6eb604e15117913fea9ee886e3",
                "typeString": "literal_string \"DXCT\""
              },
              "value": "DXCT"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 44,
            "src": "394:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 17,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "394:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 18,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "418:2:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "518:133:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "532:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 25,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "547:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 30,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 26,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "565:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 28,
                                  "name": "decimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19,
                                  "src": "579:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 27,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "571:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 29,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "571:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "565:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 31,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "564:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "547:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "532:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "532:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "603:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 38,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1305,
                          "src": "612:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "612:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "603:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 39,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "626:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "603:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "603:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 43,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "name": "initialBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "462:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "448:46:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:0:0"
            },
            "scope": 44,
            "src": "428:223:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 45,
        "src": "243:410:0"
      }
    ],
    "src": "0:654:0"
  },
  "legacyAST": {
    "absolutePath": "/usr/src/app/contracts/DataXchainToken.sol",
    "exportedSymbols": {
      "DataXchainToken": [
        44
      ]
    },
    "id": 45,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 1291,
        "src": "26:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 982,
        "src": "98:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 805,
        "src": "170:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1290,
              "src": "271:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$1290",
                "typeString": "contract StandardToken"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "271:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "PausableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 981,
              "src": "286:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PausableToken_$981",
                "typeString": "contract PausableToken"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "286:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "BurnableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 804,
              "src": "301:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BurnableToken_$804",
                "typeString": "contract BurnableToken"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "301:13:0"
          }
        ],
        "contractDependencies": [
          457,
          637,
          733,
          804,
          847,
          879,
          981,
          1290
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 44,
        "linearizedBaseContracts": [
          44,
          804,
          981,
          457,
          637,
          1290,
          733,
          847,
          879
        ],
        "name": "DataXchainToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 13,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 44,
            "src": "320:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 11,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "320:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4461746158636861696e",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "341:12:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1c35e2a1d1922d3ca21a0195b7c6fdcb9094961f8364a02feca9ccef09653ad8",
                "typeString": "literal_string \"DataXchain\""
              },
              "value": "DataXchain"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 44,
            "src": "359:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 14,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "359:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "44584354",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "382:6:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_820220df068181782cf04f9a2deae67d7e31ba6eb604e15117913fea9ee886e3",
                "typeString": "literal_string \"DXCT\""
              },
              "value": "DXCT"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 44,
            "src": "394:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 17,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "394:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 18,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "418:2:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "518:133:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "532:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 25,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "547:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 30,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 26,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "565:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 28,
                                  "name": "decimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19,
                                  "src": "579:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 27,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "571:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 29,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "571:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "565:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 31,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "564:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "547:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "532:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "532:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "603:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 38,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1305,
                          "src": "612:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "612:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "603:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 39,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "626:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "603:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "603:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 43,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "name": "initialBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "462:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "448:46:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:0:0"
            },
            "scope": 44,
            "src": "428:223:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 45,
        "src": "243:410:0"
      }
    ],
    "src": "0:654:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "burner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Burn",
          "type": "event"
        },
        "0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625": {
          "anonymous": false,
          "inputs": [],
          "name": "Pause",
          "type": "event"
        },
        "0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33": {
          "anonymous": false,
          "inputs": [],
          "name": "Unpause",
          "type": "event"
        },
        "0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipRenounced",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xfe4d91d06bcd909304c7a9b1efe2ae48dab1e76a",
      "transactionHash": "0x2a9cdd1086c6ae05d6db268455685b7d98ffe3d2d8782b9e07e605c7896d36ab"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-28T08:11:50.992Z"
}